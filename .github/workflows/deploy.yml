name: 'deploy'

on:
  workflow_call:
    inputs:
      app:
        description: 'the app name'
        default: ''
        required: true
        type: string
      ansible_repo:
        description: 'the ansible repository'
        required: true
        default: 'atlas-aws-test'
        type: string

env:
  checkout_path: ${{ github.run_number }}
  checkout_full_path: ${{ github.workspace }}/${{ github.run_number }}
  docker_image: registry.gitlab.com/atlasconsulting/devops/atlas-aws-test:v1.5
  docker_name: deploy-${{ github.sha }}

jobs:

  build:

    runs-on: self-hosted

    name: 'Build package'

    steps:

      #TODO: verify if build already exists

      - name: 'ansible update'
        run: ansible-update.sh atlas_aws_test

      - name: 'set permissions'
        run: sudo chown -R www-data:www-data ${{ env.checkout_full_path }}

      - name: 'creating package'
        run: cd /opt/ansible/atlas_aws_test && venv/bin/ansible-playbook package-apps.yml --extra-vars "{\"deploy\":[\"${{ inputs.app }}\"]}" --extra-vars "{\"pack_suffix\":\"${{ github.sha }}\"}" --extra-vars "{\"deploy_options\":{\"${{ inputs.app }}\":{\"mount\":\"${{ env.checkout_full_path }}\"}}}"

  deploy:

    needs: build

    runs-on: self-hosted

    name: 'Deploy'

    steps:

      - name: 'ansible update'
        run: ansible-update.sh ${{ inputs.ansible_repository }}

      - name: 'deploying package'
        run: |
          cd /opt/ansible/${{ inputs.ansible_repository }} && venv/bin/ansible-playbook s3-deploy-apps.yml --extra-vars "{\"pack_suffix\":\"${{ github.sha }}\"}" --extra-vars "{\"deploy\": [\"${{ inputs.app }}\"], \"archive\":\"yes\"}"

  cleanup:

    if: ${{ always() }}
    needs: [build, deploy]

    runs-on: self-hosted

    name: 'Cleanup'

    steps:

      - name: 'cleanup'
        run: sudo rm -rf ${{ env.checkout_full_path }}
